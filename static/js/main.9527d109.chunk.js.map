{"version":3,"sources":["SnakeBoard.js","utils.js","Points.js","LeaderBoard.js","App.js","index.js"],"names":["SnakeBoard","points","setPoints","initialRows","i","j","randomPosition","x","Math","floor","random","y","useState","rows","setRows","snake","setSnake","direction","setDirection","food","setFood","intervalId","setIntervalId","isGameOver","setIsGameOver","document","addEventListener","e","keyCode","displayRows","map","row","className","tile","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","newSnake","push","head","slice","find","b","checkGameOver","pointsList","JSON","parse","localStorage","getItem","setItem","stringify","window","dispatchEvent","Event","forEach","madonPaa","pop","newRows","displaySnake","Points","getSnakePoints","LeaderBoard","setPointsList","sort","a","App","onClick","location","reload","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9527d109.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport {useInterval} from \"./utils\";\nimport \"./SnakeBoard.css\";\n\nconst SnakeBoard = ({points, setPoints}) => {\n  const height = 30;\n  const width = 30;\n  var initialRows = [];\n  for (var i = 0; i < height; i++) {\n    initialRows[i] = [];\n    for (var j = 0; j < width; j++) {\n      initialRows[i][j] = \"blank\";\n    }\n  }\n\n  const randomPosition = () => {\n    const position = {\n      x: Math.floor(Math.random() * width),\n      y: Math.floor(Math.random() * height)\n    };\n    return position;\n  };\n\n  const [rows, setRows] = useState(initialRows);\n  const [snake, setSnake] = useState([{x: 0, y: 0}]);\n  const [direction, setDirection] = useState(\"right\");\n  const [food, setFood] = useState(randomPosition);\n  const [intervalId, setIntervalId] = useState();\n  const [isGameOver, setIsGameOver] = useState(false);\n\n  const changeDirectionWithKeys = e => {\n    const {keyCode} = e;\n    switch (keyCode) {\n      case 37:\n        setDirection(\"left\");\n        break;\n      case 38:\n        setDirection(\"top\");\n        break;\n      case 39:\n        setDirection(\"right\");\n        break;\n      case 40:\n        setDirection(\"bottom\");\n        break;\n      default:\n        break;\n    }\n  };\n  document.addEventListener(\"keydown\", changeDirectionWithKeys);\n\n  const displayRows = rows.map((row, i) => (\n    <div className=\"Snake-row\" key={i}>\n      {row.map((tile, j) => (\n        <div className={`tile ${tile}`} key={`${i}-${j}`} />\n      ))}\n    </div>\n  ));\n\n  const displaySnake = () => {\n    const newRows = initialRows;\n    snake.forEach(tile => {\n      newRows[tile.x][tile.y] = \"snake\";\n    });\n    newRows[food.x][food.y] = \"food\";\n    setRows(newRows);\n  };\n\n  const checkGameOver = () => {\n    const head = snake[0];\n    const body = snake.slice(1, -1);\n    return body.find(b => b.x === head.x && b.y === head.y);\n  };\n\n  const moveSnake = () => {\n    const newSnake = [];\n    switch (direction) {\n      case \"right\":\n        newSnake.push({x: snake[0].x, y: (snake[0].y + 1) % width});\n        break;\n      case \"left\":\n        newSnake.push({x: snake[0].x, y: (snake[0].y - 1 + width) % width});\n        break;\n      case \"top\":\n        newSnake.push({x: (snake[0].x - 1 + height) % height, y: snake[0].y});\n        break;\n      case \"bottom\":\n        newSnake.push({x: (snake[0].x + 1) % height, y: snake[0].y});\n        break;\n      default:\n        break;\n    }\n\n    if (checkGameOver()) {\n      setIsGameOver(true);\n      clearInterval(intervalId);\n      const pointsList = JSON.parse(localStorage.getItem(\"snake-points\")) || [];\n      pointsList.push(points);\n      localStorage.setItem(\"snake-points\", JSON.stringify(pointsList));\n      window.dispatchEvent(new Event(\"storage\"));\n    }\n\n    // Lisätään madolle joka askeleella uusi pala,\n    // joka poistetaan jos mato ei saa tällä askeleella ruokaa\n    snake.forEach(tile => {\n      newSnake.push(tile);\n    });\n    // Tarkistetaan saako mato ruuan kiinni\n    const madonPaa = snake[0];\n    if (madonPaa.x === food.x && madonPaa.y === food.y) {\n      setFood(randomPosition);\n      setPoints(points + 1);\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n    displaySnake();\n  };\n\n  useInterval(moveSnake, 150, setIntervalId);\n\n  return (\n    <div className=\"Snake-board\">\n      {displayRows}\n      {isGameOver && <div className=\"Game-over\">Game over!</div>}\n    </div>\n  );\n};\n\nexport default SnakeBoard;\n","import {useEffect, useRef} from \"react\";\n/*\nThanks Dan Abramov for useInterval hook\nhttps://overreacted.io/making-setinterval-declarative-with-react-hooks/\nThis useInterval Hook sets up an interval and clears it after unmounting.\nIt’s a combo of setInterval and clearInterval tied to the component lifecycle.\n*/\nexport const useInterval = (callback, delay, setIntervalId) => {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(\n    () => {\n      savedCallback.current = callback;\n    },\n    [callback]\n  );\n  // Set up the interval.\n  useEffect(\n    () => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        setIntervalId(id);\n        return () => clearInterval(id);\n      }\n    },\n    [delay, setIntervalId]\n  );\n};\n","import React from \"react\";\nimport \"./Points.css\";\n\nconst Points = ({points}) => {\n  return <div className=\"Points\">{points} pistettä</div>;\n};\n\nexport default Points;\n","import React, {useState} from \"react\";\nimport \"./LeaderBoard.css\";\n\nconst getSnakePoints = () =>\n  JSON.parse(localStorage.getItem(\"snake-points\")) || [];\n\nconst LeaderBoard = () => {\n  const [pointsList, setPointsList] = useState(getSnakePoints());\n\n  window.addEventListener(\"storage\", () => {\n    setPointsList(getSnakePoints());\n  });\n\n  return (\n    <div className=\"LeaderBoard\">\n      <div className=\"LeaderBoard-header\">Top 5</div>\n      <div className=\"LeaderBoard-points\">\n        {pointsList\n          .sort((a, b) => b - a)\n          .slice(0, 5)\n          .map((points, i) => (\n            <div key={`${points}-${i}`}>{points} pistettä</div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default LeaderBoard;\n","import React, {useState} from \"react\";\nimport \"./App.css\";\nimport SnakeBoard from \"./SnakeBoard\";\nimport Points from \"./Points\";\nimport LeaderBoard from \"./LeaderBoard\";\n\nconst App = () => {\n  const [points, setPoints] = useState(0);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">Matopeli</header>\n      <Points points={points} />\n      <SnakeBoard points={points} setPoints={setPoints} />\n      <button onClick={() => window.location.reload()}>Uusi peli</button>\n      <LeaderBoard />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}